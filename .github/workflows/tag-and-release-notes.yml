name: "Deploy on Comment"

on:
  issue_comment:
    types: [created]
jobs:
  deploy:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/deploy')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      pull-requests: read
    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch

      - name: Checkout PR branch
        uses: actions/checkout@v3
        if: success()
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Check if PR is from release branch to master
        if: ${{ github.event.issue.pull_request.base.ref == 'master' && startsWith(github.event.issue.pull_request.head.ref, 'release/') }}
        run: |
          branch=${{ github.event.issue.pull_request.head.ref }}
          echo "Creating release from branch $branch"

          # Generate tag
          tag="v${branch#release/}"
          echo "::set-output name=tag::$tag"

          # Generate Release notes
          notes=$(git log --format=%B ${{ github.event.before }}..${{ github.event.after }} --no-merges)
          echo "::set-output name=notes::$notes"

      - name: Create tag and Release notes
        if: ${{ steps.release.outputs.tag != '' && steps.release.outputs.notes != '' }}
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = '${{ steps.release.outputs.tag }}';
            const notes = '${{ steps.release.outputs.notes }}';

            github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              name: tag,
              body: notes,
              draft: false,
              prerelease: false
            });